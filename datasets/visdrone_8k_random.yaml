# Ultralytics YOLO 🚀, AGPL-3.0 license
# COCO 2017 dataset https://cocodataset.org by Microsoft
# Documentation: https://docs.ultralytics.com/datasets/detect/coco/
# Example usage: yolo train data=coco.yaml
# parent
# ├── ultralytics
# └── datasets
#     └── coco  ← downloads here (20.1 GB)

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: ../../datasets # dataset root dir /home/user/WDC2TB/m11016023/T4/FishEye_Object_Detection/datasets/fisheye8k/train/images
train: [
  "../../datasets/8k_random/train/images",
  "../../datasets/visdrone/VisDrone2019-DET-train/images",
] # train images (relative to 'path') 118287 images
val: [
  "../../datasets/8k_random/val/images",
] # val images (relative to 'path') 5000 images
test: ../../datasets/8k_random/val/images # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794
nc: 5
# Classes
names:
  0: Bus
  1: Bike
  2: Car
  3: Pedestrian
  4: Truck

# Download script/URL (optional)
download: |
  from ultralytics.utils.downloads import download
  from pathlib import Path

  # Download labels
  segments = True  # segment or box labels
  dir = Path(yaml['path'])  # dataset root dir
  url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
  urls = [url + ('coco2017labels-segments.zip' if segments else 'coco2017labels.zip')]  # labels
  #download(urls, dir=dir.parent)
  # Download data
  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images
          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images
          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)
  #download(urls, dir=dir / 'images', threads=3)
